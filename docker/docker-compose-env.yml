version: "3"
services:
  # -----------------------
  # Database setup
  # -----------------------
  postgres:
    image: postgres:14.2
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=objects
    networks:
      default:
        aliases:
          - postgres
    # persistent volume to survive container recreation
    volumes:
      - db-data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - "8088:8080"
    networks:
      default:
        aliases:
          - adminer
  # -----------------------
  # Kafka setup
  # -----------------------
  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper
  kafka:
    image: 'bitnami/kafka:2.8.1'
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      # without zookeeper https://github.com/bitnami/bitnami-docker-kafka
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    networks:
      default:
        aliases:
          - kafka
    # persistent volume to survive container recreation
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui
    ports:
      - "8092:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    depends_on:
      - kafka
  # -----------------------
  # Mongo setup
  # -----------------------
  mongo:
    image: mongo:5.0.8
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      default:
        aliases:
          - mongo
    volumes:
      - mongo-data:/data/db
  mongo-express:
    image: mongo-express:0.54.0
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongo:27017/
networks:
  default:
volumes:
  db-data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local
  mongo-data:
    driver: local