apiVersion: v1
kind: ServiceAccount
metadata:
  name: logging-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loki
  name: loki
spec:
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      serviceAccountName: logging-service-account
      containers:
        - image: 'grafana/loki:2.9.4'
          name: loki
          ports:
            - containerPort: 3100
          args:
            - '-config.file=/etc/loki/loki.yaml'
          resources: { }
          volumeMounts:
            - mountPath: /etc/loki
              name: loki-config
      restartPolicy: Always
      volumes:
        - name: loki-config
          configMap:
            defaultMode: 420
            name: loki-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
data:
  loki.yaml: |-
    # required for multi-tenancy
    auth_enabled: true

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
      http_server_write_timeout: 310s
      http_server_read_timeout: 310s
      grpc_server_max_recv_msg_size: 104857600  # 100 Mb
      grpc_server_max_send_msg_size: 104857600  # 100 Mb
    
    ingester_client:
      grpc_client_config:
        max_recv_msg_size: 104857600  # 100 Mb
        max_send_msg_size: 104857600  # 100 Mb
    
    query_range:
      # make queries more cache-able by aligning them with their step intervals
      align_queries_with_step: true
      max_retries: 5
      cache_results: true
    
      results_cache:
        cache:
          # We're going to use the in-process "FIFO" cache
          enable_fifocache: true
          fifocache:
            size: 1024
            validity: 24h
    
    ingester:
      # https://docs.openshift.com/container-platform/4.10/logging/cluster-logging-loki.html
      chunk_idle_period: 1h
      chunk_target_size: 8388608
      chunk_retain_period: 30s
      max_transfer_retries: 0
      max_chunk_age: 2h
      chunk_encoding: snappy
    common:
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 12h
      ingestion_rate_mb: 8
      ingestion_burst_size_mb: 16
      max_cache_freshness_per_query: '10m'
      split_queries_by_interval: 24h
    frontend:
      max_outstanding_per_tenant: 1024
    querier:
      query_timeout: 300s
      engine:
        timeout: 300s
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: loki
  name: loki
spec:
  ports:
    - name: "3100"
      port: 3100
  selector:
    app: loki
  type: LoadBalancer
# Promtail.yaml
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail-daemonset
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '9080'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccount: promtail-serviceaccount
      containers:
        - name: promtail-container
          image: grafana/promtail
          ports:
            - containerPort: 9080
              protocol: TCP
          args:
            - -config.file=/etc/promtail/promtail.yaml
          env:
            - name: 'HOSTNAME' # needed when using kubernetes_sd_configs
              valueFrom:
                fieldRef:
                  fieldPath: 'spec.nodeName'
          volumeMounts:
            - name: logs
              mountPath: /var/log
            - name: promtail-config
              mountPath: /etc/promtail
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
      volumes:
        - name: logs
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: promtail-config
          configMap:
            name: promtail-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    clients:
    - url: http://loki:3100/loki/api/v1/push

    positions:
      filename: /tmp/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: pod-logs
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app=~"object-.+"}'
            stages:
              - regex:
                  expression: '.*"log.level":"(?P<level>[a-zA-Z]+)"'
              - labels:
                  level:
        - match:
            selector: '{app=~"object-.+"}'
            stages:
              - regex:
                  expression: '.*level=(?P<level>[a-zA-Z]+)'
              - labels:
                  level:
        - tenant:
            # hardcoded value 
            value: sandbox
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_name
          target_label: job
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-clusterrole
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - services
      - pods
    verbs:
      - get
      - watch
      - list

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-serviceaccount

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: promtail-serviceaccount
    namespace: default
roleRef:
  kind: ClusterRole
  name: promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io


