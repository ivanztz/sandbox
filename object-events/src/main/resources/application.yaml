spring:
  application:
    name: object-events
  data:
    mongodb:
      database: ${database-name:local}
      host: ${server-name:localhost}
      port: ${database-port:27017}
      username: ${database-user:admin}
      password: ${database-password:password}
      authentication-database: ${auth-database-name:admin}
  jackson:
    default-property-inclusion: non_null
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer #For Dead Letter Topic
    consumer:
      enable-auto-commit: false
      group-id: object-events
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.key.default.type: java.lang.String
        spring.json.trusted.packages: '*'
        request.timeout.ms: '60000'
        session.timeout.ms: '180000'
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    listener:
      concurrency: 1

logging:
  level:
    ROOT: INFO
    com.iz: INFO

management.endpoints.web.exposure.include: '*'

topics:
  events: object.events
